syntax = "proto3";

package jobs.v1;

option php_namespace = "Spiral\\RoadRunner\\Jobs\\DTO\\V1";

// REQUESTS -------------------

// single job request (jobs.Push RPC endpoint) -> Push(j *jobsProto.PushRequest, _ *jobsProto.Empty)
// response `message Empty`
message PushRequest {
    Job job = 1;
}

// batch jobs request (jobs.PushBatch RPC endpoint) -> PushBatch(j *jobsProto.PushBatchRequest, _ *jobsProto.Empty)
// response `message Empty`
message PushBatchRequest {
    repeated Job jobs = 1;
}

// Job is a main message which user might send to the RR jobs plugin
message Job {
    // job name, usually PHP class
    string job = 1;
    // unique job id
    string id = 2;
    // payload, might be embedded json or just byte-string
    string payload = 3;
    // headers map[string][]string
    map<string, HeaderValue> headers = 4;
    // job options, contains common and driver specific fields
    Options options = 5;
}

// Options message represents all Jobs' options
message Options {
    int64 priority = 1;
    string pipeline = 2;
    int64 delay = 3;
    // new in 2.10
    bool auto_ack = 6;
    //--------------
    // new in 2.11 (kafka related)
    string topic = 7;
    string metadata = 8;
    int64 offset = 9;
    int32 partition = 10;
    // -------------
}

// HeaderValue represents []string value for the header (map[string][]string)
message HeaderValue {
    repeated string value = 1;
}

// ---------------------------------------------
// DeclareRequest used to dynamically declare pipeline -> Declare(req *jobsProto.DeclareRequest, _ *jobsProto.Empty)
// response `message Empty`
message DeclareRequest {
    map<string, string> pipeline = 1;
}
message Stats {
    repeated Stat stats = 1;
}

// Stat used as a response for the Stats RPC call
message Stat {
    string pipeline = 1;
    string driver = 2;
    string queue = 3;
    int64 active = 4;
    int64 delayed = 5;
    int64 reserved = 6;
    bool ready = 7;
    // new in 2.10.5
    uint64 priority = 8;
}


// ---------------------------------------------
// request to pause/resume/list/destroy/declare
message Pipelines {
    repeated string pipelines = 1;
}

// some endpoints receives nothing
// all endpoints returns nothing, except error
message Empty {}
